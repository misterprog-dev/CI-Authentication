security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    
    providers:
        #users_in_memory: { memory: null }
        users:
            entity:
                class: App\Entity\User
                property: username
    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        api:
            pattern: ^/v1/rest/
            stateless: true
            anonymous: true            
            json_login:
                username_path: username
                check_path: /v1/rest/tokens
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure            
            guard:
                provider: users
                authenticators: 
                - lexik_jwt_authentication.jwt_token_authenticator
            logout:
                path: /v1/rest/tokens/revoke
                handlers: [App\Service\Authentication\LogoutHandler]
                
        refresh:
            pattern:  ^/v1/rest/tokens/refresh
            stateless: true
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/v1/rest/tokens, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/v1/rest/tokens/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/v1/rest/users, roles: IS_AUTHENTICATED_ANONYMOUSLY }        
        - { path: ^/v1/rest/, roles: IS_AUTHENTICATED_FULLY }                
